{
	"version": 3,
	"file": null,
	"sources": [
		"src/models/notifier-notification.model.js",
		"src/services/notifier-queue.service.js",
		"src/models/notifier-config.model.js",
		"src/services/notifier.service.js",
		"src/components/notifier-container.component.js",
		"src/animation-presets/fade.animation-preset.js",
		"src/animation-presets/slide.animation-preset.js",
		"src/services/notifier-animation.service.js",
		"src/services/notifier-timer.service.js",
		"src/components/notifier-notification.component.js",
		"src/notifier.module.js",
		"index.js",
		"angular-notifier.js"
	],
	"sourcesContent": [
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nvar /**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nNotifierNotification = (function () {\n    function NotifierNotification(options) {\n        Object.assign(this, options);\n        // If not set manually, we have to create a unique notification ID by ourselves. The ID generation relies on the current browser\n        // datetime in ms, in praticular the moment this notification gets constructed. Concurrency, and thus two IDs being the exact same,\n        // is not possible due to the action queue concept.\n        if (options.id === undefined) {\n            this.id = \"ID_\" + new Date().getTime();\n        }\n    }\n    return NotifierNotification;\n}());\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nexport { NotifierNotification };\nfunction NotifierNotification_tsickle_Closure_declarations() {\n    /**\n     * Unique notification ID, can be set manually to control the notification from outside later on\n     * @type {?}\n     */\n    NotifierNotification.prototype.id;\n    /**\n     * Notification type, will be used for constructing an appropriate class name\n     * @type {?}\n     */\n    NotifierNotification.prototype.type;\n    /**\n     * Notification message\n     * @type {?}\n     */\n    NotifierNotification.prototype.message;\n    /**\n     * Component reference of this notification, created and set during creation time\n     * @type {?}\n     */\n    NotifierNotification.prototype.component;\n}\n/**\n * Notifiction options\n *\n * This interface describes which information are needed to create a new notification, or in other words, which information the external API\n * call must provide.\n * @record\n */\nexport function NotifierNotificationOptions() { }\nfunction NotifierNotificationOptions_tsickle_Closure_declarations() {\n    /**\n     * Notification ID, optional\n     * @type {?|undefined}\n     */\n    NotifierNotificationOptions.prototype.id;\n    /**\n     * Notification type\n     * @type {?}\n     */\n    NotifierNotificationOptions.prototype.type;\n    /**\n     * Notificatin message\n     * @type {?}\n     */\n    NotifierNotificationOptions.prototype.message;\n}\n//# sourceMappingURL=notifier-notification.model.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs/Subject\";\n/**\n * Notifier queue service\n *\n * In general, API calls don't get processed right away. Instead, we have to queue them up in order to prevent simultanious API calls\n * interfering with each other. This, at least in theory, is possible at any time. In particular, animations - which potentially overlap -\n * can cause changes in JS classes as well as affect the DOM. Therefore, the queue service takes all actions, puts them in a queue, and\n * processes them at the right time (which is when the previous action has been processed successfully).\n *\n * Technical sidenote:\n * An action looks pretty similar to the ones within the Flux / Redux pattern.\n */\nvar NotifierQueueService = (function () {\n    function NotifierQueueService() {\n        this.actionStream = new Subject();\n        this.actionQueue = [];\n        this.isActionInProgress = false;\n    }\n    /**\n     * Push a new action to the queue, and try to run it\n     *\n     * @param {?} action Action object\n     * @return {?}\n     */\n    NotifierQueueService.prototype.push = /**\n     * Push a new action to the queue, and try to run it\n     *\n     * @param {?} action Action object\n     * @return {?}\n     */\n    function (action) {\n        this.actionQueue.push(action);\n        this.tryToRunNextAction();\n    };\n    /**\n     * Continue with the next action (called when the current action is finished)\n     * @return {?}\n     */\n    NotifierQueueService.prototype.continue = /**\n     * Continue with the next action (called when the current action is finished)\n     * @return {?}\n     */\n    function () {\n        this.isActionInProgress = false;\n        this.tryToRunNextAction();\n    };\n    /**\n     * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n     * @return {?}\n     */\n    NotifierQueueService.prototype.tryToRunNextAction = /**\n     * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n     * @return {?}\n     */\n    function () {\n        if (this.isActionInProgress || this.actionQueue.length === 0) {\n            return; // Skip (the queue can now go drink a coffee as it has nothing to do anymore)\n        }\n        this.isActionInProgress = true;\n        this.actionStream.next(this.actionQueue.shift()); // Push next action to the stream, and remove the current action from the queue\n    };\n    NotifierQueueService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierQueueService.ctorParameters = function () { return []; };\n    return NotifierQueueService;\n}());\nexport { NotifierQueueService };\nfunction NotifierQueueService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierQueueService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierQueueService.ctorParameters;\n    /**\n     * Stream of actions, subscribable from outside\n     * @type {?}\n     */\n    NotifierQueueService.prototype.actionStream;\n    /**\n     * Queue of actions\n     * @type {?}\n     */\n    NotifierQueueService.prototype.actionQueue;\n    /**\n     * Flag, true if some action is currently in progress\n     * @type {?}\n     */\n    NotifierQueueService.prototype.isActionInProgress;\n}\n//# sourceMappingURL=notifier-queue.service.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Notifier options\n * @record\n */\nexport function NotifierOptions() { }\nfunction NotifierOptions_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.animations;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.behaviour;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.position;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.theme;\n}\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nvar /**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nNotifierConfig = (function () {\n    function NotifierConfig(customOptions) {\n        if (customOptions === void 0) { customOptions = {}; }\n        // Set default values\n        this.animations = {\n            enabled: true,\n            hide: {\n                easing: 'ease',\n                offset: 50,\n                preset: 'fade',\n                speed: 300\n            },\n            overlap: 150,\n            shift: {\n                easing: 'ease',\n                speed: 300\n            },\n            show: {\n                easing: 'ease',\n                preset: 'slide',\n                speed: 300\n            }\n        };\n        this.behaviour = {\n            autoHide: 7000,\n            onClick: false,\n            onMouseover: 'pauseAutoHide',\n            showDismissButton: true,\n            stacking: 4\n        };\n        this.position = {\n            horizontal: {\n                distance: 12,\n                position: 'left'\n            },\n            vertical: {\n                distance: 12,\n                gap: 10,\n                position: 'bottom'\n            }\n        };\n        this.theme = 'material';\n        // The following merges the custom options into the notifier config, respecting the already set default values\n        // This linear, more explicit and code-sizy workflow is preferred here over a recursive one (because we know the object structure)\n        // Technical sidenote: Objects are merged, other types of values simply overwritten / copied\n        if (customOptions.theme !== undefined) {\n            this.theme = customOptions.theme;\n        }\n        if (customOptions.animations !== undefined) {\n            if (customOptions.animations.enabled !== undefined) {\n                this.animations.enabled = customOptions.animations.enabled;\n            }\n            if (customOptions.animations.overlap !== undefined) {\n                this.animations.overlap = customOptions.animations.overlap;\n            }\n            if (customOptions.animations.hide !== undefined) {\n                Object.assign(this.animations.hide, customOptions.animations.hide);\n            }\n            if (customOptions.animations.shift !== undefined) {\n                Object.assign(this.animations.shift, customOptions.animations.shift);\n            }\n            if (customOptions.animations.show !== undefined) {\n                Object.assign(this.animations.show, customOptions.animations.show);\n            }\n        }\n        if (customOptions.behaviour !== undefined) {\n            Object.assign(this.behaviour, customOptions.behaviour);\n        }\n        if (customOptions.position !== undefined) {\n            if (customOptions.position.horizontal !== undefined) {\n                Object.assign(this.position.horizontal, customOptions.position.horizontal);\n            }\n            if (customOptions.position.vertical !== undefined) {\n                Object.assign(this.position.vertical, customOptions.position.vertical);\n            }\n        }\n    }\n    return NotifierConfig;\n}());\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nexport { NotifierConfig };\nfunction NotifierConfig_tsickle_Closure_declarations() {\n    /**\n     * Customize animations\n     * @type {?}\n     */\n    NotifierConfig.prototype.animations;\n    /**\n     * Customize behaviour\n     * @type {?}\n     */\n    NotifierConfig.prototype.behaviour;\n    /**\n     * Customize positioning\n     * @type {?}\n     */\n    NotifierConfig.prototype.position;\n    /**\n     * Customize theming\n     * @type {?}\n     */\n    NotifierConfig.prototype.theme;\n}\n//# sourceMappingURL=notifier-config.model.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { forwardRef, Inject, Injectable } from \"@angular/core\";\nimport { NotifierConfig } from \"./../models/notifier-config.model\";\nimport { NotifierQueueService } from \"./notifier-queue.service\";\nimport { NotifierConfigToken } from \"./../notifier.module\";\n/**\n * Notifier service\n *\n * This service provides access to the public notifier API. Once injected into a component, directive, pipe, service, or any other building\n * block of an applications, it can be used to show new notifications, and hide existing ones. Internally, it transforms API calls into\n * actions, which then get thrown into the action queue - eventually being processed at the right moment.\n */\nvar NotifierService = (function () {\n    function NotifierService(notifierQueueService, config // The forwardRef is (sadly) required here\n    ) {\n        this.queueService = notifierQueueService;\n        this.config = config;\n    }\n    /**\n     * Get the notifier configuration\n     *\n     * @return {?} Notifier configuration\n     */\n    NotifierService.prototype.getConfig = /**\n     * Get the notifier configuration\n     *\n     * @return {?} Notifier configuration\n     */\n    function () {\n        return this.config;\n    };\n    /**\n     * API: Show a new notification\n     *\n     * @param {?} notificationOptions Notification options\n     * @return {?}\n     */\n    NotifierService.prototype.show = /**\n     * API: Show a new notification\n     *\n     * @param {?} notificationOptions Notification options\n     * @return {?}\n     */\n    function (notificationOptions) {\n        this.queueService.push({\n            payload: notificationOptions,\n            type: 'SHOW'\n        });\n    };\n    /**\n     * API: Hide a specific notification, given its ID\n     *\n     * @param {?} notificationId ID of the notification to hide\n     * @return {?}\n     */\n    NotifierService.prototype.hide = /**\n     * API: Hide a specific notification, given its ID\n     *\n     * @param {?} notificationId ID of the notification to hide\n     * @return {?}\n     */\n    function (notificationId) {\n        this.queueService.push({\n            payload: notificationId,\n            type: 'HIDE'\n        });\n    };\n    /**\n     * API: Hide the newest notification\n     * @return {?}\n     */\n    NotifierService.prototype.hideNewest = /**\n     * API: Hide the newest notification\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_NEWEST'\n        });\n    };\n    /**\n     * API: Hide the oldest notification\n     * @return {?}\n     */\n    NotifierService.prototype.hideOldest = /**\n     * API: Hide the oldest notification\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_OLDEST'\n        });\n    };\n    /**\n     * API: Hide all notifications at once\n     * @return {?}\n     */\n    NotifierService.prototype.hideAll = /**\n     * API: Hide all notifications at once\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_ALL'\n        });\n    };\n    /**\n     * API: Shortcut for showing a new notification\n     *\n     * @param {?} type             Type of the notification\n     * @param {?} message          Message of the notification\n     * @param {?=} notificationId\n     * @return {?}\n     */\n    NotifierService.prototype.notify = /**\n     * API: Shortcut for showing a new notification\n     *\n     * @param {?} type             Type of the notification\n     * @param {?} message          Message of the notification\n     * @param {?=} notificationId\n     * @return {?}\n     */\n    function (type, message, notificationId) {\n        var /** @type {?} */ notificationOptions = {\n            message: message,\n            type: type\n        };\n        if (notificationId !== undefined) {\n            notificationOptions.id = notificationId;\n        }\n        this.show(notificationOptions);\n    };\n    NotifierService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierService.ctorParameters = function () { return [\n        { type: NotifierQueueService, },\n        { type: NotifierConfig, decorators: [{ type: Inject, args: [forwardRef(function () { return NotifierConfigToken; }),] },] },\n    ]; };\n    return NotifierService;\n}());\nexport { NotifierService };\nfunction NotifierService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierService.ctorParameters;\n    /**\n     * Notifier queue service\n     * @type {?}\n     */\n    NotifierService.prototype.queueService;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierService.prototype.config;\n}\n//# sourceMappingURL=notifier.service.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from \"@angular/core\";\nimport { NotifierNotification } from \"./../models/notifier-notification.model\";\nimport { NotifierQueueService } from \"./../services/notifier-queue.service\";\nimport { NotifierService } from \"./../services/notifier.service\";\n/**\n * Notifier container component\n * ----------------------------\n * This component acts as a wrapper for all notification components; consequently, it is responsible for creating a new notification\n * component and removing an existing notification component. Being more precicely, it also handles side effects of those actions, such as\n * shifting or even completely removing other notifications as well. Overall, this components handles actions coming from the queue service\n * by subscribing to its action stream.\n *\n * Technical sidenote:\n * This component has to be used somewhere in an application to work; it will not inject and create itself automatically, primarily in order\n * to not break the Angular AoT compilation. Moreover, this component (and also the notification components) set their change detection\n * strategy onPush, which means that we handle change detection manually in order to get the best performance. (#perfmatters)\n */\nvar NotifierContainerComponent = (function () {\n    function NotifierContainerComponent(changeDetector, notifierQueueService, notifierService) {\n        this.changeDetector = changeDetector;\n        this.queueService = notifierQueueService;\n        this.config = notifierService.getConfig();\n        this.notifications = [];\n    }\n    /**\n     * Component initialization lifecycle hook, connects this component to the action queue, and then handles incoming actions\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.ngOnInit = /**\n     * Component initialization lifecycle hook, connects this component to the action queue, and then handles incoming actions\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.queueServiceSubscription = this.queueService.actionStream.subscribe(function (action) {\n            _this.handleAction(action).then(function () {\n                _this.queueService.continue();\n            });\n        });\n    };\n    /**\n     * Component destroyment lifecycle hook, cleans up the observable subsciption\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.ngOnDestroy = /**\n     * Component destroyment lifecycle hook, cleans up the observable subsciption\n     * @return {?}\n     */\n    function () {\n        if (this.queueServiceSubscription) {\n            this.queueServiceSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Notification identifier, used as the ngFor trackby function\n     *\n     * @param {?} index        Index\n     * @param {?} notification Notifier notification\n     * @return {?} Notification ID as the unique identnfier\n     */\n    NotifierContainerComponent.prototype.identifyNotification = /**\n     * Notification identifier, used as the ngFor trackby function\n     *\n     * @param {?} index        Index\n     * @param {?} notification Notifier notification\n     * @return {?} Notification ID as the unique identnfier\n     */\n    function (index, notification) {\n        return notification.id;\n    };\n    /**\n     * Event handler, handles clicks on notification dismiss buttons\n     *\n     * @param {?} notificationId ID of the notification to dismiss\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.onNotificationDismiss = /**\n     * Event handler, handles clicks on notification dismiss buttons\n     *\n     * @param {?} notificationId ID of the notification to dismiss\n     * @return {?}\n     */\n    function (notificationId) {\n        this.queueService.push({\n            payload: notificationId,\n            type: 'HIDE'\n        });\n    };\n    /**\n     * Event handler, handles notification ready events\n     *\n     * @param {?} notificationComponent Notification component reference\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.onNotificationReady = /**\n     * Event handler, handles notification ready events\n     *\n     * @param {?} notificationComponent Notification component reference\n     * @return {?}\n     */\n    function (notificationComponent) {\n        var /** @type {?} */ currentNotification = this.notifications[this.notifications.length - 1]; // Get the latest notification\n        currentNotification.component = notificationComponent; // Save the new omponent reference\n        this.continueHandleShowAction(currentNotification); // Continue with handling the show action\n    };\n    /**\n     * Handle incoming actions by mapping action types to methods, and then running them\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleAction = /**\n     * Handle incoming actions by mapping action types to methods, and then running them\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        switch (action.type) {\n            // TODO: Maybe a map (actionType -> class method) is a cleaner solution here?\n            case 'SHOW':\n                return this.handleShowAction(action);\n            case 'HIDE':\n                return this.handleHideAction(action);\n            case 'HIDE_OLDEST':\n                return this.handleHideOldestAction(action);\n            case 'HIDE_NEWEST':\n                return this.handleHideNewestAction(action);\n            case 'HIDE_ALL':\n                return this.handleHideAllAction(action);\n            default:\n                return new Promise(function (resolve, reject) {\n                    resolve(); // Ignore unknown action types\n                });\n        }\n    };\n    /**\n     * Show a new notification\n     *\n     * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleShowAction = /**\n     * Show a new notification\n     *\n     * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.tempPromiseResolver = resolve; // Save the promise resolve function so that it can be called later on by another method\n            _this.addNotificationToList(new NotifierNotification(action.payload));\n        });\n    };\n    /**\n     * Continue to show a new notification (after the notification components is initialized / created / rendered).\n     *\n     * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n     * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n     * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n     * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n     *\n     * @param {?} notification New notification to show\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.continueHandleShowAction = /**\n     * Continue to show a new notification (after the notification components is initialized / created / rendered).\n     *\n     * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n     * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n     * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n     * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n     *\n     * @param {?} notification New notification to show\n     * @return {?}\n     */\n    function (notification) {\n        var _this = this;\n        // First (which means only one) notification in the list?\n        var /** @type {?} */ numberOfNotifications = this.notifications.length;\n        if (numberOfNotifications === 1) {\n            notification.component.show().then(this.tempPromiseResolver); // Done\n        }\n        else {\n            var /** @type {?} */ implicitStackingLimit = 2;\n            // Stacking enabled? (stacking value below 2 means stacking is disabled)\n            if (this.config.behaviour.stacking === false || this.config.behaviour.stacking < implicitStackingLimit) {\n                this.notifications[0].component.hide().then(function () {\n                    _this.removeNotificationFromList(_this.notifications[0]);\n                    notification.component.show().then(_this.tempPromiseResolver); // Done\n                });\n            }\n            else {\n                var /** @type {?} */ stepPromises_1 = [];\n                // Are there now too many notifications?\n                if (numberOfNotifications > this.config.behaviour.stacking) {\n                    var /** @type {?} */ oldNotifications_1 = this.notifications.slice(1, numberOfNotifications - 1);\n                    // Are animations enabled?\n                    if (this.config.animations.enabled) {\n                        // Is animation overlap enabled?\n                        if (this.config.animations.overlap !== false && this.config.animations.overlap > 0) {\n                            stepPromises_1.push(this.notifications[0].component.hide());\n                            setTimeout(function () {\n                                stepPromises_1.push(_this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true));\n                            }, this.config.animations.hide.speed - this.config.animations.overlap);\n                            setTimeout(function () {\n                                stepPromises_1.push(notification.component.show());\n                            }, this.config.animations.hide.speed + this.config.animations.shift.speed - this.config.animations.overlap);\n                        }\n                        else {\n                            stepPromises_1.push(new Promise(function (resolve, reject) {\n                                _this.notifications[0].component.hide().then(function () {\n                                    _this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true).then(function () {\n                                        notification.component.show().then(resolve);\n                                    });\n                                });\n                            }));\n                        }\n                    }\n                    else {\n                        stepPromises_1.push(this.notifications[0].component.hide());\n                        stepPromises_1.push(this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true));\n                        stepPromises_1.push(notification.component.show());\n                    }\n                }\n                else {\n                    var /** @type {?} */ oldNotifications_2 = this.notifications.slice(0, numberOfNotifications - 1);\n                    // Are animations enabled?\n                    if (this.config.animations.enabled) {\n                        // Is animation overlap enabled?\n                        if (this.config.animations.overlap !== false && this.config.animations.overlap > 0) {\n                            stepPromises_1.push(this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true));\n                            setTimeout(function () {\n                                stepPromises_1.push(notification.component.show());\n                            }, this.config.animations.shift.speed - this.config.animations.overlap);\n                        }\n                        else {\n                            stepPromises_1.push(new Promise(function (resolve, reject) {\n                                _this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true).then(function () {\n                                    notification.component.show().then(resolve);\n                                });\n                            }));\n                        }\n                    }\n                    else {\n                        stepPromises_1.push(this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true));\n                        stepPromises_1.push(notification.component.show());\n                    }\n                }\n                Promise.all(stepPromises_1).then(function () {\n                    if (numberOfNotifications > _this.config.behaviour.stacking) {\n                        _this.removeNotificationFromList(_this.notifications[0]);\n                    }\n                    _this.tempPromiseResolver();\n                }); // Done\n            }\n        }\n    };\n    /**\n     * Hide an existing notification\n     *\n     * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n     * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n     * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n     *\n     * @param {?} action Action object, payload contains the notification ID\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideAction = /**\n     * Hide an existing notification\n     *\n     * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n     * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n     * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n     *\n     * @param {?} action Action object, payload contains the notification ID\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var /** @type {?} */ stepPromises = [];\n            // Does the notification exist / are there even any notifications? (let's prevent accidential errors)\n            var /** @type {?} */ notification = _this.findNotificationById(action.payload);\n            if (notification === undefined) {\n                resolve();\n                return;\n            }\n            // Get older notifications\n            var /** @type {?} */ notificationIndex = _this.findNotificationIndexById(action.payload);\n            if (notificationIndex === undefined) {\n                resolve();\n                return;\n            }\n            var /** @type {?} */ oldNotifications = _this.notifications.slice(0, notificationIndex);\n            // Do older notifications exist, and thus do we need to shift other notifications as a consequence?\n            if (oldNotifications.length > 0) {\n                // Are animations enabled?\n                if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0) {\n                    // Is animation overlap enabled?\n                    if (_this.config.animations.overlap !== false && _this.config.animations.overlap > 0) {\n                        stepPromises.push(notification.component.hide());\n                        setTimeout(function () {\n                            stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                        }, _this.config.animations.hide.speed - _this.config.animations.overlap);\n                    }\n                    else {\n                        notification.component.hide().then(function () {\n                            stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                        });\n                    }\n                }\n                else {\n                    stepPromises.push(notification.component.hide());\n                    stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                }\n            }\n            else {\n                stepPromises.push(notification.component.hide());\n            }\n            // Wait until both hiding and shifting is done, then remove the notification from the list\n            Promise.all(stepPromises).then(function () {\n                _this.removeNotificationFromList(notification);\n                resolve(); // Done\n            });\n        });\n    };\n    /**\n     * Hide the oldest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideOldestAction = /**\n     * Hide the oldest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        // Are there any notifications? (prevent accidential errors)\n        if (this.notifications.length === 0) {\n            return new Promise(function (resolve, reject) {\n                resolve();\n            }); // Done\n        }\n        else {\n            action.payload = this.notifications[0].id;\n            return this.handleHideAction(action);\n        }\n    };\n    /**\n     * Hide the newest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideNewestAction = /**\n     * Hide the newest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        // Are there any notifications? (prevent accidential errors)\n        if (this.notifications.length === 0) {\n            return new Promise(function (resolve, reject) {\n                resolve();\n            }); // Done\n        }\n        else {\n            action.payload = this.notifications[this.notifications.length - 1].id;\n            return this.handleHideAction(action);\n        }\n    };\n    /**\n     * Hide all notifications at once\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideAllAction = /**\n     * Hide all notifications at once\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Are there any notifications? (prevent accidential errors)\n            var /** @type {?} */ numberOfNotifications = _this.notifications.length;\n            if (numberOfNotifications === 0) {\n                resolve(); // Done\n                return;\n            }\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0 && _this.config.animations.hide.offset !== false &&\n                _this.config.animations.hide.offset > 0) {\n                var _loop_1 = function (i) {\n                    var /** @type {?} */ animationOffset = _this.config.position.vertical.position === 'top' ? numberOfNotifications - 1 : i;\n                    setTimeout(function () {\n                        _this.notifications[i].component.hide().then(function () {\n                            // Are we done here, was this the last notification to be hidden?\n                            if ((_this.config.position.vertical.position === 'top' && i === 0) ||\n                                (_this.config.position.vertical.position === 'bottom' && i === numberOfNotifications - 1)) {\n                                _this.removeAllNotificationsFromList();\n                                resolve(); // Done\n                            }\n                        });\n                    }, _this.config.animations.hide.offset * animationOffset);\n                };\n                for (var /** @type {?} */ i = numberOfNotifications - 1; i >= 0; i--) {\n                    _loop_1(i);\n                }\n            }\n            else {\n                var /** @type {?} */ stepPromises = [];\n                for (var /** @type {?} */ i = numberOfNotifications - 1; i >= 0; i--) {\n                    stepPromises.push(_this.notifications[i].component.hide());\n                }\n                Promise.all(stepPromises).then(function () {\n                    _this.removeAllNotificationsFromList();\n                    resolve(); // Done\n                });\n            }\n        });\n    };\n    /**\n     * Shift multiple notifications at once\n     *\n     * @param {?} notifications List containing the notifications to be shifted\n     * @param {?} distance      Distance to shift (in px)\n     * @param {?} toMakePlace   Flag, defining in which direciton to shift\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.shiftNotifications = /**\n     * Shift multiple notifications at once\n     *\n     * @param {?} notifications List containing the notifications to be shifted\n     * @param {?} distance      Distance to shift (in px)\n     * @param {?} toMakePlace   Flag, defining in which direciton to shift\n     * @return {?} Promise, resolved when done\n     */\n    function (notifications, distance, toMakePlace) {\n        return new Promise(function (resolve, reject) {\n            // Are there any notifications to shift?\n            if (notifications.length === 0) {\n                resolve();\n                return;\n            }\n            var /** @type {?} */ notificationPromises = [];\n            for (var /** @type {?} */ i = notifications.length - 1; i >= 0; i--) {\n                notificationPromises.push(notifications[i].component.shift(distance, toMakePlace));\n            }\n            Promise.all(notificationPromises).then(resolve); // Done\n        });\n    };\n    /**\n     * Add a new notification to the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to add to the list of notifications\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.addNotificationToList = /**\n     * Add a new notification to the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to add to the list of notifications\n     * @return {?}\n     */\n    function (notification) {\n        this.notifications.push(notification);\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Remove an existing notification from the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to be removed from the list of notifications\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.removeNotificationFromList = /**\n     * Remove an existing notification from the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to be removed from the list of notifications\n     * @return {?}\n     */\n    function (notification) {\n        this.notifications =\n            this.notifications.filter(function (item) { return item.component !== notification.component; });\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Remove all notifications from the list (triggers change detection)\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.removeAllNotificationsFromList = /**\n     * Remove all notifications from the list (triggers change detection)\n     * @return {?}\n     */\n    function () {\n        this.notifications = [];\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Helper: Find a notification in the notification list by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding notification\n     * @return {?} Notification, undefined if not found\n     */\n    NotifierContainerComponent.prototype.findNotificationById = /**\n     * Helper: Find a notification in the notification list by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding notification\n     * @return {?} Notification, undefined if not found\n     */\n    function (notificationId) {\n        return this.notifications.find(function (currentNotification) { return currentNotification.id === notificationId; });\n    };\n    /**\n     * Helper: Find a notification's index by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding a notification's index\n     * @return {?} Notification index, undefined if not found\n     */\n    NotifierContainerComponent.prototype.findNotificationIndexById = /**\n     * Helper: Find a notification's index by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding a notification's index\n     * @return {?} Notification index, undefined if not found\n     */\n    function (notificationId) {\n        var /** @type {?} */ notificationIndex = this.notifications.findIndex(function (currentNotification) { return currentNotification.id === notificationId; });\n        return (notificationIndex !== -1 ? notificationIndex : undefined);\n    };\n    NotifierContainerComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // (#perfmatters)\n                    host: {\n                        class: 'notifier__container'\n                    },\n                    selector: 'notifier-container',\n                    template: \"<ul><li *ngFor=\\\"let notification of notifications; trackBy: identifyNotification;\\\" class=\\\"notifier__container-list\\\"><notifier-notification (dismiss)=\\\"onNotificationDismiss( $event )\\\" (ready)=\\\"onNotificationReady( $event )\\\" [notification]=\\\"notification\\\"></notifier-notification></ul>\"\n                },] },\n    ];\n    /** @nocollapse */\n    NotifierContainerComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef, },\n        { type: NotifierQueueService, },\n        { type: NotifierService, },\n    ]; };\n    return NotifierContainerComponent;\n}());\nexport { NotifierContainerComponent };\nfunction NotifierContainerComponent_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierContainerComponent.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierContainerComponent.ctorParameters;\n    /**\n     * List of currently somewhat active notifications\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.notifications;\n    /**\n     * Change detector\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.changeDetector;\n    /**\n     * Notifier queue service\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.queueService;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.config;\n    /**\n     * Queue service observable subscription (saved for cleanup)\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.queueServiceSubscription;\n    /**\n     * Promise resolve function reference, temporarily used while the notification child component gets created\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.tempPromiseResolver;\n}\n//# sourceMappingURL=notifier-container.component.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Fade animation preset\n */\nexport var /** @type {?} */ fade = {\n    hide: function (notification) {\n        return {\n            from: {\n                opacity: '1'\n            },\n            to: {\n                opacity: '0'\n            }\n        };\n    },\n    show: function (notification) {\n        return {\n            from: {\n                opacity: '0'\n            },\n            to: {\n                opacity: '1'\n            }\n        };\n    }\n};\n//# sourceMappingURL=fade.animation-preset.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Slide animation preset\n */\nexport var /** @type {?} */ slide = {\n    hide: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ shift = notification.component.getShift();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    },\n    show: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n            to = {\n                transform: 'translate3d( -50%, 0, 0 )'\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    }\n};\n//# sourceMappingURL=slide.animation-preset.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from \"@angular/core\";\nimport { fade } from \"./../animation-presets/fade.animation-preset\";\nimport { slide } from \"./../animation-presets/slide.animation-preset\";\n/**\n * Notifier animation service\n */\nvar NotifierAnimationService = (function () {\n    function NotifierAnimationService() {\n        this.animationPresets = {\n            fade: fade,\n            slide: slide\n        };\n    }\n    /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n    NotifierAnimationService.prototype.getAnimationData = /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n    function (direction, notification) {\n        // Get all necessary animation data\n        var /** @type {?} */ keyframes;\n        var /** @type {?} */ duration;\n        var /** @type {?} */ easing;\n        if (direction === 'show') {\n            keyframes = this.animationPresets[notification.component.getConfig().animations.show.preset].show(notification);\n            duration = notification.component.getConfig().animations.show.speed;\n            easing = notification.component.getConfig().animations.show.easing;\n        }\n        else {\n            keyframes = this.animationPresets[notification.component.getConfig().animations.hide.preset].hide(notification);\n            duration = notification.component.getConfig().animations.hide.speed;\n            easing = notification.component.getConfig().animations.hide.easing;\n        }\n        // Build and return animation data\n        return {\n            keyframes: [\n                keyframes.from,\n                keyframes.to\n            ],\n            options: {\n                duration: duration,\n                easing: easing,\n                fill: 'forwards' // Keep the newly painted state after the animation finished\n            }\n        };\n    };\n    NotifierAnimationService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierAnimationService.ctorParameters = function () { return []; };\n    return NotifierAnimationService;\n}());\nexport { NotifierAnimationService };\nfunction NotifierAnimationService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierAnimationService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierAnimationService.ctorParameters;\n    /**\n     * List of animation presets (currently static)\n     * @type {?}\n     */\n    NotifierAnimationService.prototype.animationPresets;\n}\n//# sourceMappingURL=notifier-animation.service.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from \"@angular/core\";\n/**\n * Notifier timer service\n *\n * This service acts as a timer, needed due to the still rather limited setTimeout JavaScript API. The timer service can start and stop a\n * timer. Furthermore, it can also pause the timer at any time, and resume later on. The timer API workd promise-based.\n */\nvar NotifierTimerService = (function () {\n    function NotifierTimerService() {\n        this.now = 0;\n        this.remaining = 0;\n    }\n    /**\n     * Start (or resume) the timer\n     *\n     * @param {?} duration Timer duration, in ms\n     * @return {?} Promise, resolved once the timer finishes\n     */\n    NotifierTimerService.prototype.start = /**\n     * Start (or resume) the timer\n     *\n     * @param {?} duration Timer duration, in ms\n     * @return {?} Promise, resolved once the timer finishes\n     */\n    function (duration) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // For the first run ...\n            // For the first run ...\n            _this.remaining = duration;\n            // Setup, then start the timer\n            // Setup, then start the timer\n            _this.finishPromiseResolver = resolve;\n            _this.continue();\n        });\n    };\n    /**\n     * Pause the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.pause = /**\n     * Pause the timer\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timerId);\n        this.remaining -= new Date().getTime() - this.now;\n    };\n    /**\n     * Continue the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.continue = /**\n     * Continue the timer\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.now = new Date().getTime();\n        this.timerId = window.setTimeout(function () {\n            _this.finish();\n        }, this.remaining);\n    };\n    /**\n     * Stop the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.stop = /**\n     * Stop the timer\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timerId);\n        this.remaining = 0;\n    };\n    /**\n     * Finish up the timeout by resolving the timer promise\n     * @return {?}\n     */\n    NotifierTimerService.prototype.finish = /**\n     * Finish up the timeout by resolving the timer promise\n     * @return {?}\n     */\n    function () {\n        this.finishPromiseResolver();\n    };\n    NotifierTimerService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierTimerService.ctorParameters = function () { return []; };\n    return NotifierTimerService;\n}());\nexport { NotifierTimerService };\nfunction NotifierTimerService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierTimerService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierTimerService.ctorParameters;\n    /**\n     * Timestamp (in ms), created in the moment the timer starts\n     * @type {?}\n     */\n    NotifierTimerService.prototype.now;\n    /**\n     * Remaining time (in ms)\n     * @type {?}\n     */\n    NotifierTimerService.prototype.remaining;\n    /**\n     * Timeout ID, used for clearing the timeout later on\n     * @type {?}\n     */\n    NotifierTimerService.prototype.timerId;\n    /**\n     * Promise resolve function, eventually getting called once the timer finishes\n     * @type {?}\n     */\n    NotifierTimerService.prototype.finishPromiseResolver;\n}\n//# sourceMappingURL=notifier-timer.service.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from \"@angular/core\";\nimport { NotifierAnimationService } from \"./../services/notifier-animation.service\";\nimport { NotifierNotification } from \"./../models/notifier-notification.model\";\nimport { NotifierService } from \"./../services/notifier.service\";\nimport { NotifierTimerService } from \"./../services/notifier-timer.service\";\n/**\n * Notifier notification component\n * -------------------------------\n * This component is responsible for actually displaying the notification on screen. In addition, it's able to show and hide this\n * notification, in particular to animate this notification in and out, as well as shift (move) this notification vertically around.\n * Furthermore, the notification component handles all interactions the user has with this notification / component, such as clicks and\n * mouse movements.\n */\nvar NotifierNotificationComponent = (function () {\n    function NotifierNotificationComponent(elementRef, renderer, notifierService, notifierTimerService, notifierAnimationService) {\n        this.config = notifierService.getConfig();\n        this.ready = new EventEmitter();\n        this.dismiss = new EventEmitter();\n        this.timerService = notifierTimerService;\n        this.animationService = notifierAnimationService;\n        this.renderer = renderer;\n        this.element = elementRef.nativeElement;\n        this.elementShift = 0;\n    }\n    /**\n     * Component after view init lifecycle hook, setts up the component and then emits the ready event\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.ngAfterViewInit = /**\n     * Component after view init lifecycle hook, setts up the component and then emits the ready event\n     * @return {?}\n     */\n    function () {\n        this.setup();\n        this.elementHeight = this.element.offsetHeight;\n        this.elementWidth = this.element.offsetWidth;\n        this.ready.emit(this);\n    };\n    /**\n     * Get the notifier config\n     *\n     * @return {?} Notifier configuration\n     */\n    NotifierNotificationComponent.prototype.getConfig = /**\n     * Get the notifier config\n     *\n     * @return {?} Notifier configuration\n     */\n    function () {\n        return this.config;\n    };\n    /**\n     * Get notification element height (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    NotifierNotificationComponent.prototype.getHeight = /**\n     * Get notification element height (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    function () {\n        return this.elementHeight;\n    };\n    /**\n     * Get notification element width (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    NotifierNotificationComponent.prototype.getWidth = /**\n     * Get notification element width (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    function () {\n        return this.elementWidth;\n    };\n    /**\n     * Get notification shift offset (in px)\n     *\n     * @return {?} Notification element shift offset (in px)\n     */\n    NotifierNotificationComponent.prototype.getShift = /**\n     * Get notification shift offset (in px)\n     *\n     * @return {?} Notification element shift offset (in px)\n     */\n    function () {\n        return this.elementShift;\n    };\n    /**\n     * Show (animate in) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.show = /**\n     * Show (animate in) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.show.speed > 0) {\n                // Get animation data\n                var /** @type {?} */ animationData = _this.animationService.getAnimationData('show', _this.notification);\n                // Set initial styles (styles before animation), prevents quick flicker when animation starts\n                var /** @type {?} */ animatedProperties = Object.keys(animationData.keyframes[0]);\n                for (var /** @type {?} */ i = animatedProperties.length - 1; i >= 0; i--) {\n                    _this.renderer.setStyle(_this.element, animatedProperties[i], animationData.keyframes[0][animatedProperties[i]]);\n                }\n                // Animate notification in\n                // Animate notification in\n                _this.renderer.setStyle(_this.element, 'visibility', 'visible');\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    _this.startAutoHideTimer();\n                    resolve(); // Done\n                };\n            }\n            else {\n                // Show notification\n                // Show notification\n                _this.renderer.setStyle(_this.element, 'visibility', 'visible');\n                _this.startAutoHideTimer();\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Hide (animate out) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.hide = /**\n     * Hide (animate out) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.stopAutoHideTimer();\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0) {\n                var /** @type {?} */ animationData = _this.animationService.getAnimationData('hide', _this.notification);\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    resolve(); // Done\n                };\n            }\n            else {\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Shift (move) this notification\n     *\n     * @param {?} distance         Distance to shift (in px)\n     * @param {?} shiftToMakePlace Flag, defining in which direction to shift\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.shift = /**\n     * Shift (move) this notification\n     *\n     * @param {?} distance         Distance to shift (in px)\n     * @param {?} shiftToMakePlace Flag, defining in which direction to shift\n     * @return {?} Promise, resolved when done\n     */\n    function (distance, shiftToMakePlace) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Calculate new position (position after the shift)\n            var /** @type {?} */ newElementShift;\n            if ((_this.config.position.vertical.position === 'top' && shiftToMakePlace)\n                || (_this.config.position.vertical.position === 'bottom' && !shiftToMakePlace)) {\n                newElementShift = _this.elementShift + distance + _this.config.position.vertical.gap;\n            }\n            else {\n                newElementShift = _this.elementShift - distance - _this.config.position.vertical.gap;\n            }\n            var /** @type {?} */ horizontalPosition = _this.config.position.horizontal.position === 'middle' ? '-50%' : '0';\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.shift.speed > 0) {\n                var /** @type {?} */ animationData = {\n                    // TODO: Extract into animation service\n                    keyframes: [\n                        {\n                            transform: \"translate3d( \" + horizontalPosition + \", \" + _this.elementShift + \"px, 0 )\"\n                        },\n                        {\n                            transform: \"translate3d( \" + horizontalPosition + \", \" + newElementShift + \"px, 0 )\"\n                        }\n                    ],\n                    options: {\n                        duration: _this.config.animations.shift.speed,\n                        easing: _this.config.animations.shift.easing,\n                        fill: 'forwards'\n                    }\n                };\n                _this.elementShift = newElementShift;\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    resolve(); // Done\n                };\n            }\n            else {\n                _this.renderer.setStyle(_this.element, 'transform', \"translate3d( \" + horizontalPosition + \", \" + newElementShift + \"px, 0 )\");\n                _this.elementShift = newElementShift;\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Handle click on dismiss button\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onClickDismiss = /**\n     * Handle click on dismiss button\n     * @return {?}\n     */\n    function () {\n        this.dismiss.emit(this.notification.id);\n    };\n    /**\n     * Handle mouseover over notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationMouseover = /**\n     * Handle mouseover over notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.pauseAutoHideTimer();\n        }\n        else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.stopAutoHideTimer();\n        }\n    };\n    /**\n     * Handle mouseout from notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationMouseout = /**\n     * Handle mouseout from notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.continueAutoHideTimer();\n        }\n        else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.startAutoHideTimer();\n        }\n    };\n    /**\n     * Handle click on notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationClick = /**\n     * Handle click on notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onClick === 'hide') {\n            this.onClickDismiss();\n        }\n    };\n    /**\n     * Start the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.startAutoHideTimer = /**\n     * Start the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.start(this.config.behaviour.autoHide).then(function () {\n                _this.onClickDismiss();\n            });\n        }\n    };\n    /**\n     * Pause the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.pauseAutoHideTimer = /**\n     * Pause the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.pause();\n        }\n    };\n    /**\n     * Continue the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.continueAutoHideTimer = /**\n     * Continue the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.continue();\n        }\n    };\n    /**\n     * Stop the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.stopAutoHideTimer = /**\n     * Stop the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.stop();\n        }\n    };\n    /**\n     * Initial notification setup\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.setup = /**\n     * Initial notification setup\n     * @return {?}\n     */\n    function () {\n        // Set start position (initially the exact same for every new notification)\n        if (this.config.position.horizontal.position === 'left') {\n            this.renderer.setStyle(this.element, 'left', this.config.position.horizontal.distance + \"px\");\n        }\n        else if (this.config.position.horizontal.position === 'right') {\n            this.renderer.setStyle(this.element, 'right', this.config.position.horizontal.distance + \"px\");\n        }\n        else {\n            this.renderer.setStyle(this.element, 'left', '50%');\n            // Let's get the GPU handle some work as well (#perfmatters)\n            this.renderer.setStyle(this.element, 'transform', 'translate3d( -50%, 0, 0 )');\n        }\n        if (this.config.position.vertical.position === 'top') {\n            this.renderer.setStyle(this.element, 'top', this.config.position.vertical.distance + \"px\");\n        }\n        else {\n            this.renderer.setStyle(this.element, 'bottom', this.config.position.vertical.distance + \"px\");\n        }\n        // Add classes (responsible for visual design)\n        this.renderer.addClass(this.element, \"notifier__notification--\" + this.notification.type);\n        this.renderer.addClass(this.element, \"notifier__notification--\" + this.config.theme);\n    };\n    NotifierNotificationComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // (#perfmatters)\n                    host: {\n                        '(click)': 'onNotificationClick()',\n                        '(mouseout)': 'onNotificationMouseout()',\n                        '(mouseover)': 'onNotificationMouseover()',\n                        class: 'notifier__notification'\n                    },\n                    providers: [\n                        NotifierTimerService\n                    ],\n                    selector: 'notifier-notification',\n                    template: \"<p class=\\\"notifier__notification-message\\\">{{ notification.message }}</p><button (click)=\\\"onClickDismiss()\\\" *ngIf=\\\"config.behaviour.showDismissButton\\\" class=\\\"notifier__notification-button\\\" title=\\\"dismiss\\\" type=\\\"button\\\"><svg class=\\\"notifier__notification-button-icon\\\" height=\\\"20\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"20\\\"><path d=\\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\\"/></svg></button>\"\n                },] },\n    ];\n    /** @nocollapse */\n    NotifierNotificationComponent.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: NotifierService, },\n        { type: NotifierTimerService, },\n        { type: NotifierAnimationService, },\n    ]; };\n    NotifierNotificationComponent.propDecorators = {\n        \"notification\": [{ type: Input },],\n        \"ready\": [{ type: Output },],\n        \"dismiss\": [{ type: Output },],\n    };\n    return NotifierNotificationComponent;\n}());\nexport { NotifierNotificationComponent };\nfunction NotifierNotificationComponent_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierNotificationComponent.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierNotificationComponent.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    NotifierNotificationComponent.propDecorators;\n    /**\n     * Input: Notification object, contains all details necessary to construct the notification\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.notification;\n    /**\n     * Output: Ready event, handles the initialization success by emitting a reference to this notification component\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.ready;\n    /**\n     * Output: Dismiss event, handles the click on the dismiss button by emitting the notification ID of this notification component\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.dismiss;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.config;\n    /**\n     * Notifier timer service\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.timerService;\n    /**\n     * Notifier animation service\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.animationService;\n    /**\n     * Angular renderer, used to preserve the overall DOM abstraction & independence\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.renderer;\n    /**\n     * Native element reference, used for manipulating DOM properties\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.element;\n    /**\n     * Current notification height, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementHeight;\n    /**\n     * Current notification width, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementWidth;\n    /**\n     * Current notification shift, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementShift;\n}\n//# sourceMappingURL=notifier-notification.component.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { CommonModule } from \"@angular/common\";\nimport { InjectionToken, NgModule } from \"@angular/core\";\nimport { NotifierContainerComponent } from \"./components/notifier-container.component\";\nimport { NotifierNotificationComponent } from \"./components/notifier-notification.component\";\nimport { NotifierConfig } from \"./models/notifier-config.model\";\nimport { NotifierAnimationService } from \"./services/notifier-animation.service\";\nimport { NotifierQueueService } from \"./services/notifier-queue.service\";\nimport { NotifierService } from \"./services/notifier.service\";\n/**\n * Injection Token for notifier options\n */\nexport var /** @type {?} */ NotifierOptionsToken = new InjectionToken('[angular-notifier] Notifier Options');\n/**\n * Injection Token for notifier configuration\n */\nexport var /** @type {?} */ NotifierConfigToken = new InjectionToken('[anuglar-notifier] Notifier Config');\n/**\n * Factory for a notifier configuration with custom options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @param {?} options - Custom notifier options\n * @return {?} - Notifier configuration as result\n */\nexport function notifierCustomConfigFactory(options) {\n    return new NotifierConfig(options);\n}\n/**\n * Factory for a notifier configuration with default options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @return {?} - Notifier configuration as result\n */\nexport function notifierDefaultConfigFactory() {\n    return new NotifierConfig({});\n}\n/**\n * Notifier module\n */\nvar NotifierModule = (function () {\n    function NotifierModule() {\n    }\n    /**\n     * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n     *\n     * @param {?=} options\n     * @return {?} - Notifier module with custom providers\n     */\n    NotifierModule.withConfig = /**\n     * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n     *\n     * @param {?=} options\n     * @return {?} - Notifier module with custom providers\n     */\n    function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: NotifierModule,\n            providers: [\n                // Provide the options itself upfront (as we need to inject them as dependencies -- see below)\n                {\n                    provide: NotifierOptionsToken,\n                    useValue: options\n                },\n                // Provide a custom notifier configuration, based on the given notifier options\n                {\n                    deps: [\n                        NotifierOptionsToken\n                    ],\n                    provide: NotifierConfigToken,\n                    useFactory: notifierCustomConfigFactory\n                }\n            ]\n        };\n    };\n    NotifierModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NotifierContainerComponent,\n                        NotifierNotificationComponent\n                    ],\n                    exports: [\n                        NotifierContainerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    providers: [\n                        NotifierAnimationService,\n                        NotifierService,\n                        NotifierQueueService,\n                        // Provide the default notifier configuration if just the module is imported\n                        {\n                            provide: NotifierConfigToken,\n                            useFactory: notifierDefaultConfigFactory\n                        }\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    NotifierModule.ctorParameters = function () { return []; };\n    return NotifierModule;\n}());\nexport { NotifierModule };\nfunction NotifierModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NotifierModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NotifierModule.ctorParameters;\n}\n//# sourceMappingURL=notifier.module.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { NotifierModule } from \"./src/notifier.module\";\nexport { NotifierService } from \"./src/services/notifier.service\";\n//# sourceMappingURL=index.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NotifierModule, NotifierService } from \"./index\";\nexport { NotifierContainerComponent as ɵf } from \"./src/components/notifier-container.component\";\nexport { NotifierNotificationComponent as ɵh } from \"./src/components/notifier-notification.component\";\nexport { NotifierConfig as ɵe } from \"./src/models/notifier-config.model\";\nexport { NotifierConfigToken as ɵb, NotifierOptionsToken as ɵa, notifierCustomConfigFactory as ɵc, notifierDefaultConfigFactory as ɵd } from \"./src/notifier.module\";\nexport { NotifierAnimationService as ɵj } from \"./src/services/notifier-animation.service\";\nexport { NotifierQueueService as ɵg } from \"./src/services/notifier-queue.service\";\nexport { NotifierTimerService as ɵi } from \"./src/services/notifier-timer.service\";\n//# sourceMappingURL=angular-notifier.js.map"
	],
	"names": [
		"Subject"
	],
	"mappings": "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"
}
